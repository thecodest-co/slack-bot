name: Build & deploy to stagging

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Load node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
# change that for only getting serverless yaml
      - uses: actions/checkout@v3
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm test

#  bui3ld:
#    name: Build & Deploy
#    runs-on: ubuntu-latest
#    environment: staging
#
#    strategy:
#      matrix:
#        node-version: [ 14.x ]
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: Install dependencies
#        run: npm install
#      - name: Test
#        run: npm test
#      - name: serverless deploy
#        uses: serverless/github-action@v2
#        with:
#          args: deploy --conceal --stage staging
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#          DB_HOST: ${{ secrets.DB_HOST }}
#          DB_PORT: ${{ secrets.DB_PORT }}
#          DB_NAME: ${{ secrets.DB_NAME }}
#          DB_USER: ${{ secrets.DB_USER }}
#          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#          CONVERSATION_BUILDER_API_KEY: ${{ secrets.CONVERSATION_BUILDER_API_KEY }}
#          WELCOME_MESSAGE_DELAY_DAYS: ${{ secrets.WELCOME_MESSAGE_DELAY_DAYS }}
#          WELCOME_MESSAGE_DELAY_HOURS: ${{ secrets.WELCOME_MESSAGE_DELAY_HOURS }}
#          WELCOME_MESSAGE_DELAY_MINUTES: ${{ secrets.WELCOME_MESSAGE_DELAY_MINUTES }}
